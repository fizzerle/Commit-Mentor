.form-field-inline{
  display: inline-block;
  margin-left: 1rem;
}

mat-form-field {
  width: 30rem;
  display: block;
}

.selectedCommitBox.commitBoxFinished{
  background: green;
}

.commitBox{
  position: relative;
  margin: 0.5rem;
  padding: 0.5rem;
  border: thin solid rgb(0, 0, 0,0.12);
  height: 5rem;
  border-radius: 0.4rem ;
  transition: box-shadow .3s;
}

.commitBox.commitBoxFinished{
  border: thin solid green;
}

.commitBox:hover {
  cursor: pointer;
  box-shadow: 0 0 20px rgba(33,33,33,.4);
  background: darkgray;
  color:white
}

.commitBox.commitBoxFinished:hover {
  background: green;
}

.selectedCommitBox{
  cursor: pointer;
  box-shadow: 0 0 20px rgba(33,33,33,.4);
  background: darkgray;
  color:white
}

.commitStatusIcon {
  float: right;
}

.hunkInfo {
  float: left;
}

.commitMessageText{
  overflow: hidden; height: 3.8rem;
}

.noPadding {padding: 0}


.example-tree-invisible {
  display: none;
}

.example-tree ul,
.example-tree li {
  margin-top: 0;
  margin-bottom: 0;
  list-style-type: none;
}

li mat-checkbox {
  margin: 0.4rem;
}

::ng-deep .mat-horizontal-content-container {
  overflow: visible !important;
}

.blue {
  background-color: lightskyblue;
}

.green {
  background-color: lightgreen;
}

.red {
  background-color: lightcoral;
}

.roundCircle {
  margin-left: 0.2rem; margin-right: 0.2rem; width: 0.6rem;height: 0.6rem; padding: 8px; border-radius: 50%;
  display: inline-flex;
  justify-content: center;
  align-items: center; color: white
}

.strength-meter {
  position: relative;
  height: 6px;
  background: #ddd;
  margin: 10px auto 10px;
  border-radius: 3px;
}

.strength-meter:before,
.strength-meter:after {
  content: '';
  height: inherit;
  background: transparent;
  display: block;
  border-color: #fff;
  border-style: solid;
  border-width: 0 5px 0 5px;
  position: absolute;
  width: calc(((100% - 20px) / 5) + 10px);
  z-index: 10;
}

.strength-meter:before {
  left: calc((100% - 20px) / 5);
  box-sizing: border-box;
}

.strength-meter:after {
  right: calc((100% - 20px) / 5);
  box-sizing: border-box;
}

.strength-meter-fill {
  background: transparent;
  height: inherit;
  position: absolute;
  width: 0;
  border-radius: inherit;
  transition: width 0.5s ease-in-out, background 0.25s;
}

.strength-meter-fill[data-strength='0'] {
  background: darkred;
  width: 20%;
}

.strength-meter-fill[data-strength='1'] {
  background: orangered;
  width: 40%;
}

.strength-meter-fill[data-strength='2'] {
  background: orange;
  width: 60%;
}

.strength-meter-fill[data-strength='3'] {
  background: yellowgreen;
  width: 80%;
}

.strength-meter-fill[data-strength='4'] {
  background: green;
  width: 100%;
}

.message-feedback,
.message-suggetion {
  font-size: 70%;
  font-weight: 400;
  color: #6c757d !important;
  display: block;
  margin-top: 0.25rem;
}

header, .row {
  display: flex;  /* aligns all child elements (flex items) in a row */
  margin-top: 1rem;
}

.col {
  flex: 1;        /* distributes space on the line equally among items */
  max-width: 5rem;
  text-align: center;
}

.colQuestion {
  flex: 1;
  max-width: 40rem;
}

::ng-deep .mat-radio-label{
  justify-content: center;
}


.long-arrow{
  display: block;
  width: 20px;
  height: 20px;
  border-top: 3px solid #000;
  border-left: 3px solid #000;
  margin-bottom: 1rem;
  margin-left: 0.7rem;
  transform: rotate(225deg);
}

.long-arrow::after{
  content: "";
  display: block;
  width: 2px;
  height: 26rem;
  background-color: black;
  transform: rotate(-45deg) translate(146px, 58px);
  left: 0;
  top: 0;
}

